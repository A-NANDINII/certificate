{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Nandini\\\\Desktop\\\\certificate-generator\\\\frontend\\\\src\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm({\n  navigate\n}) {\n  _s();\n  const [template, setTemplate] = useState(null);\n  const [excel, setExcel] = useState(null);\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('template', template);\n    form.append('data', excel);\n    form.append('subject', subject);\n    form.append('message', message);\n    const res = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: form\n    });\n    if (res.ok) {\n      navigate('thankyou');\n    } else {\n      const result = await res.json();\n      alert(result.message || 'Error sending certificates.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Files and Send Certificates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: e => setTemplate(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx,.xls\",\n        onChange: e => setExcel(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email Subject\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Email Content\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate & Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"uoVLougsRnCEtHvxA/e79SCq25A=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","navigate","_s","template","setTemplate","excel","setExcel","subject","setSubject","message","setMessage","handleSubmit","e","preventDefault","form","FormData","append","res","fetch","method","body","ok","result","json","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","target","files","required","placeholder","value","_c","$RefreshReg$"],"sources":["C:/Users/A-Nandini/Desktop/certificate-generator/frontend/src/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction UploadForm({ navigate }) {\r\n  const [template, setTemplate] = useState(null);\r\n  const [excel, setExcel] = useState(null);\r\n  const [subject, setSubject] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form = new FormData();\r\n    form.append('template', template);\r\n    form.append('data', excel);\r\n    form.append('subject', subject);\r\n    form.append('message', message);\r\n\r\n    const res = await fetch('http://localhost:5000/upload', {\r\n      method: 'POST',\r\n      body: form,\r\n    });\r\n\r\n    if (res.ok) {\r\n      navigate('thankyou');\r\n    } else {\r\n      const result = await res.json();\r\n      alert(result.message || 'Error sending certificates.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Upload Files and Send Certificates</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" accept=\"application/pdf\" onChange={(e) => setTemplate(e.target.files[0])} required />\r\n        <input type=\"file\" accept=\".xlsx,.xls\" onChange={(e) => setExcel(e.target.files[0])} required />\r\n        <input type=\"text\" placeholder=\"Email Subject\" value={subject} onChange={(e) => setSubject(e.target.value)} required />\r\n        <textarea placeholder=\"Email Content\" value={message} onChange={(e) => setMessage(e.target.value)} required />\r\n        <button type=\"submit\">Generate & Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}