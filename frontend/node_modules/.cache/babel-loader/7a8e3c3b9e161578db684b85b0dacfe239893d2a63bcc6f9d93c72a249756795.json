{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Nandini\\\\Desktop\\\\certificate-generator\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [template, setTemplate] = useState(null);\n  const [excel, setExcel] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('template', template);\n    form.append('data', excel);\n    const res = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: form\n    });\n    const result = await res.json();\n    alert(result.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-10 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-5\",\n      children: \"Certificate Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: e => setTemplate(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx,.xls\",\n        onChange: e => setExcel(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Generate & Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3uywyYzOq+4jZZFtUQws6bnKOS0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","template","setTemplate","excel","setExcel","handleSubmit","e","preventDefault","form","FormData","append","res","fetch","method","body","result","json","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","target","files","required","_c","$RefreshReg$"],"sources":["C:/Users/A-Nandini/Desktop/certificate-generator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nfunction App() {\n  const [template, setTemplate] = useState(null);\n  const [excel, setExcel] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('template', template);\n    form.append('data', excel);\n\n    const res = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: form,\n    });\n\n    const result = await res.json();\n    alert(result.message);\n  };\n\n  return (\n    <div className=\"p-10 max-w-xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-5\">Certificate Generator</h1>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <input type=\"file\" accept=\"application/pdf\" onChange={(e) => setTemplate(e.target.files[0])} required />\n        <input type=\"file\" accept=\".xlsx,.xls\" onChange={(e) => setExcel(e.target.files[0])} required />\n        <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">Generate & Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,UAAU,EAAET,QAAQ,CAAC;IACjCO,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEP,KAAK,CAAC;IAE1B,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,MAAMO,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC/BC,KAAK,CAACF,MAAM,CAACG,OAAO,CAAC;EACvB,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCtB,OAAA;MAAIqB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClE1B,OAAA;MAAM2B,QAAQ,EAAEpB,YAAa;MAACc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjDtB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,iBAAiB;QAACC,QAAQ,EAAGtB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACuB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;QAACC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxG1B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,YAAY;QAACC,QAAQ,EAAGtB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACuB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;QAACC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChG1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxB,EAAA,CA7BQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}